{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","index.js"],"names":["Posts","_ref","posts","react_default","a","createElement","className","map","post","key","id","body","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","pageNumber","Math","ceil","i","push","prevNext","direction","onClick","disabled","number","react_router_dom","to","App","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setCurrentPage","_useState7","_useState8","setPostPerPage","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","getData","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","role","onChange","event","target","value","components_Posts","components_Pagination","length","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.600cab70.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\n\nconst Posts = ({ posts }) => (\n  <ul className=\"list-group mb-4 posts\">\n    {posts.map(post => (\n      <li key={post.id} className=\"list-group-item\">\n        {post.body}\n      </li>\n\n    ))}\n  </ul>\n);\n\nexport default Posts;\n","/* eslint-disable */\nimport React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst Pagination = ({\n  postsPerPage, totalPosts, paginate, currentPage,\n}) => {\n  const pageNumbers = [];\n  const pageNumber = Math.ceil(totalPosts / postsPerPage);\n  for (let i = 1; i <= pageNumber; i++) {\n    pageNumbers.push(i);\n  }\n\n  const prevNext = (direction) => {\n    if (direction === 'prev' && currentPage === 1) {\n      return 1;\n    }\n\n    if (direction === 'next' && currentPage === pageNumber) {\n      return pageNumber;\n    }\n\n    switch (direction) {\n      case 'next':\n        return currentPage += 1;\n      case 'prev':\n        return currentPage -= 1;\n      default:\n    }\n  };\n  return (\n    <div>\n      <nav>\n        <ul className=\"pagination\">\n          <li>\n            <button\n              onClick={() => paginate(prevNext('prev'))}\n              className=\"btn btn-primary mr-5\"\n              disabled={currentPage === 1}\n            >\n                Prev\n            </button>\n          </li>\n          {pageNumbers.map(number => (\n            <li key={number} className=\"page-item\">\n              <NavLink\n                className=\"page-link\"\n                onClick={() => paginate(number)}\n                to=\"/\"\n              >\n                {number}\n              </NavLink>\n            </li>\n          ))}\n          <li>\n            <button\n              onClick={() => paginate(prevNext('next'))}\n              className=\"btn btn-primary ml-5\"\n              disabled={currentPage === pageNumber}\n            >\n                Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n\n    </div>\n\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async() => {\n      setLoading(true);\n      const response = await\n      fetch('https://jsonplaceholder.typicode.com/posts');\n      const getData = await response.json();\n\n      setPosts(getData);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleChange = (event) => {\n    setPostPerPage(+event.target.value);\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) {\n    return (\n      <div className=\"center spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <h1 className=\"text-primary mb-3\">Pagination</h1>\n        <select\n          className=\"form-control\"\n          onChange={handleChange}\n        >\n          <option value={10}>10</option>\n          <option value={5}>5</option>\n          <option value={3}>3</option>\n        </select>\n        <Posts posts={currentPosts} loading={loading} />\n        <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={posts.length}\n          paginate={paginate}\n          currentPosts={currentPosts}\n          currentPage={currentPage}\n        />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}