{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","index.js"],"names":["Posts","_ref","posts","react_default","a","createElement","className","map","post","key","id","body","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","prevNext","direction","onClick","number","href","App","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setCurrentPage","_useState7","_useState8","setPostPerPage","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","getData","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","role","components_Posts","components_Pagination","length","pageNumber","onChange","event","target","value","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d40e6baa.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\n\nconst Posts = ({ posts }) => (\n  <ul className=\"list-group mb-4\">\n    {posts.map(post => (\n      <li key={post.id} className=\"list-group-item\">\n        {post.body}\n      </li>\n\n    ))}\n  </ul>\n);\n\nexport default Posts;\n","/* eslint-disable */\nimport React from 'react';\n\nconst Pagination = ({\n  postsPerPage, totalPosts, paginate, currentPage,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const prevNext = (direction) => {\n    if (direction === 'prev' && currentPage === 1) {\n      return 1;\n    }\n\n    if (direction === 'next' && currentPage === totalPosts / postsPerPage) {\n      return totalPosts / postsPerPage;\n    }\n\n    switch (direction) {\n      case 'next':\n        return currentPage += 1;\n      case 'prev':\n        return currentPage -= 1;\n      default:\n    }\n  };\n\n  return (\n    <div>\n      <nav>\n        <ul className=\"pagination\">\n          <li>\n            <button\n              onClick={() => paginate(prevNext('prev'))}\n              className=\"btn btn-primary mr-5\"\n            >\n                Prev\n            </button>\n\n          </li>\n          {pageNumbers.map(number => (\n            <li key={number} className=\"page-item\">\n              <a\n                onClick={() => paginate(number)}\n                className=\"page-link\"\n                href=\"#\"\n              >\n                {number}\n              </a>\n            </li>\n          ))}\n          <li>\n            <button\n              onClick={() => paginate(prevNext('next'))}\n              className=\"btn btn-primary ml-5\"\n            >\n                Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n\n    </div>\n\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async() => {\n      setLoading(true);\n      const response = await\n      fetch('https://jsonplaceholder.typicode.com/posts');\n      const getData = await response.json();\n\n      setPosts(getData);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleChange = (event) => {\n    setPostPerPage(+event.target.value);\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) {\n    return (\n      <div className=\"center spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-primary mb-3\">Pagination</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n        currentPosts={currentPosts}\n        currentPage={currentPage}\n      />\n      <select\n        className=\"form-control\"\n        onChange={handleChange}\n      >\n        <option value={3}>3</option>\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n      </select>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}